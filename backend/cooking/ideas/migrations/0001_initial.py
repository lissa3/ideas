# Generated by Django 3.2.4 on 2021-06-20 21:51

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers
import timestamp.broadcast_utils.idea_utils
import timestamp.broadcast_utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ideas.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=240)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('lead_text', models.CharField(max_length=254)),
                ('main_text', models.TextField()),
                ('view_count', models.IntegerField(blank=True, default=0)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=timestamp.broadcast_utils.idea_utils.upload_img, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('JPG', 'JPEG', 'PNG')), timestamp.broadcast_utils.validators.validate_size])),
                ('featured', models.BooleanField(blank=True, default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('status', models.IntegerField(choices=[(0, 'in progres'), (1, 'in review'), (3, 'published')], default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('categ', mptt.fields.TreeForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='ideas', to='ideas.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserIdeaRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(blank=True, default=False)),
                ('dislike', models.BooleanField(blank=True, default=False)),
                ('in_bookmark', models.BooleanField(blank=True, default=False)),
                ('rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'OK'), (2, 'Fine'), (3, 'Good'), (4, 'Amazing'), (5, 'Excellent')], null=True)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ideas.idea')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='idea',
            name='fans',
            field=models.ManyToManyField(related_name='idea_fans', through='ideas.UserIdeaRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='idea',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='Tags should be separated by comma', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
